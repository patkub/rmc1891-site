version: 2

defaults: &defaults
  working_directory: ~/rmc1891-site

jobs:
  # Lockfile
  lockfile:
    docker:
      - image: circleci/node:6
    steps:
      # Checkout source code
      - checkout
      
      # Restore cache
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package.json checksum
            # when this file is changed, this key will fail
            - cache-lockfile-{{ checksum "package.json" }}
            # Fallback cache
            - cache-lockfile
      
      # Print versions
      - run:
          name: node-version
          command: 'node --version'
      - run:
          name: yarn-version
          command: 'yarn --version'
      
      # Install dependencies
      - run:
          name: yarn-install-global
          command: 'sudo yarn global add greenkeeper-lockfile@1'
      
      # Update lockfile
      - run:
          name: greenkeeper-lockfile-update
          command: 'greenkeeper-lockfile-update'
      
      # Upload lockfile
      - run:
          name: greenkeeper-lockfile-upload
          command: 'greenkeeper-lockfile-upload'
      
      # Save cache
      - save_cache:
          # package.json cache
          key: cache-lockfile-{{ checksum "package.json" }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          # Fallback cache
          key: cache-lockfile
          paths:
            - ~/.cache/yarn
  # Linting
  lint:
    docker:
      - image: circleci/node:6
    steps:
      # Checkout source code
      - checkout
      
      # Restore cache
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package.json checksum
            # when this file is changed, this key will fail
            - cache-lint-{{ checksum "package.json" }}
            # Fallback cache
            - cache-lint
      
      # Print versions
      - run:
          name: node-version
          command: 'node --version'
      - run:
          name: npm-version
          command: 'npm --version'
      - run:
          name: yarn-version
          command: 'yarn --version'
      
      # Install dependencies
      - run:
          name: npm-install-global
          command: 'sudo npm install -g bower web-component-tester'
      - run:
          name: yarn-install-global
          command: 'sudo yarn global add gulp-cli'
      - run:
          name: yarn-install
          command: 'yarn install'
      - run:
          name: bower-install
          command: 'bower install'
      
      # Linting
      - run:
          name: lint
          command: 'yarn run lint'
      
      # Save cache
      - save_cache:
          # package.json cache
          key: cache-lint-{{ checksum "package.json" }}
          paths:
            - ~/.cache/yarn
            - node_modules
            - bower_components
      - save_cache:
          # Fallback cache
          key: cache-lint
          paths:
            - ~/.cache/yarn
            - node_modules
            - bower_components
  # Test build
  test:
    docker:
      - image: circleci/node:6
    steps:
      # Checkout source code
      - checkout
      
      # Restore cache
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package.json checksum
            # when this file is changed, this key will fail
            - cache-test-{{ checksum "package.json" }}
            # Fallback cache
            - cache-test
      
      # Print versions
      - run:
          name: node-version
          command: 'node --version'
      - run:
          name: npm-version
          command: 'npm --version'
      - run:
          name: yarn-version
          command: 'yarn --version'
      
      # Install dependencies
      - run:
          name: npm-install-global
          command: 'sudo npm install -g bower web-component-tester'
      - run:
          name: yarn-install-global
          command: 'sudo yarn global add gulp-cli'
      - run:
          name: yarn-install
          command: 'yarn install'
      - run:
          name: bower-install
          command: 'bower install'
      
      # Test build
      - run:
          name: test-integration
          command: 'yarn run test:integration'
     
      # Save cache
      - save_cache:
          # build directory
          key: cache-production-{{ checksum "package.json" }}
          paths:
            - build
      - save_cache:
          # package.json cache
          key: cache-test-{{ checksum "package.json" }}
          paths:
            - ~/.cache/yarn
            - node_modules
            - bower_components
      - save_cache:
          # Fallback cache
          key: cache-test
          paths:
            - ~/.cache/yarn
            - node_modules
            - bower_components
  # Sauce Labs
  sauce:
    docker:
      - image: circleci/node:6
    steps:
      # Checkout source code
      - checkout
      
      # Restore cache
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package.json checksum
            # when this file is changed, this key will fail
            - cache-sauce-{{ checksum "package.json" }}
            # Fallback cache
            - cache-sauce
      
      # Print versions
      - run:
          name: node-version
          command: 'node --version'
      - run:
          name: npm-version
          command: 'npm --version'
      - run:
          name: yarn-version
          command: 'yarn --version'
      
      # Install dependencies
      - run:
          name: npm-install-global
          command: 'sudo npm install -g bower web-component-tester'
      - run:
          name: yarn-install-global
          command: 'sudo yarn global add gulp-cli'
      - run:
          name: yarn-install
          command: 'yarn install'
      - run:
          name: bower-install
          command: 'bower install'
      - run:
          name: sauce-download
          command: 'wget https://saucelabs.com/downloads/sc-latest-linux.tar.gz'
      - run:
          name: sauce-install
          command: 'tar -xzf sc-latest-linux.tar.gz'
      
      # Test
      - run:
          name: sauce-test
          command: 'yarn run test:sauce'
      
      # Save cache
      - save_cache:
          # package.json cache
          key: cache-sauce-{{ checksum "package.json" }}
          paths:
            - ~/.cache/yarn
            - node_modules
            - bower_components
      - save_cache:
          # Fallback cache
          key: cache-sauce
          paths:
            - ~/.cache/yarn
            - node_modules
            - bower_components
  # Deploy site
  deploy:
    docker:
      - image: circleci/node:6
    steps:
      - checkout
      - restore_cache:
          keys:
            # Find a cache corresponding to this specific package.json checksum
            # when this file is changed, this key will fail
            - cache-deploy-{{ checksum "package.json" }}
            # Fallback cache
            - cache-deploy
            
      # Restore build directory cache
      - restore_cache:
          keys:
            - cache-production-{{ checksum "package.json" }}
            
      # Print versions
      - run:
          name: node-version
          command: 'node --version'
      - run:
          name: npm-version
          command: 'npm --version'
      - run:
          name: yarn-version
          command: 'yarn --version'
      
      # Install dependencies
      - run:
          name: yarn-install-gulp
          command: 'sudo yarn global add gulp-cli'
      
      # Deploy
      - run:
          name: chmod-deploy
          command: 'chmod +x scripts/deploy.sh'
      - run:
          name: deploy
          command: './scripts/deploy.sh'
      
      # Save cache
      - save_cache:
          # package.json cache
          key: cache-deploy-{{ checksum "package.json" }}
          paths:
            - ~/.cache/yarn
            - node_modules
            - bower_components
      - save_cache:
          # Fallback cache
          key: cache-deploy
          paths:
            - ~/.cache/yarn
            - node_modules
            - bower_components
workflows:
  version: 2
  build_and_test:
    jobs:
      # greenkeeper-lockfile checks that CIRCLE_PREVIOUS_BUILD_NUM does not exist.
      # greenkeeper-lockfile must be the first job in the workflow, since subsequent
      # workflows will add CIRCLE_PREVIOUS_BUILD_NUM.
      - lockfile:
          filters:
            branches:
              only:
                - /greenkeeper.*/
      
      # Linting
      - lint:
          filters:
            branches:
              ignore:
                - gh-pages
      
      # Test build
      - test:
          filters:
            branches:
              ignore:
                - gh-pages
      
      # Sauce Labs
      - sauce:
          filters:
            branches:
              ignore:
                - gh-pages
      
      # Require approval before deploying site
      - approve-production:
          type: approval
          requires:
            - lint
            - test
            - sauce
          filters:
            branches:
              only: deploy
      
      # Deploy site from deploy branch
      - deploy:
          requires:
            - approve-production
          filters:
            branches:
              only: deploy
